###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         14/May/2020  16:50:59
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\drv\Generated_Code\LED2.c
#    Command line      =
#        -f C:\Users\81901\AppData\Local\Temp\EW568F.tmp
#        (C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\drv\Generated_Code\LED2.c
#        --preprocess=s
#        "C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\kl16z128_eslora
#        MQXLite\List" -lcN
#        "C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\kl16z128_eslora
#        MQXLite\List" -o
#        "C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\kl16z128_eslora
#        MQXLite\Obj" --no_cse --no_unroll --no_inline --no_code_motion
#        --no_tbaa --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\Sources\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\MQXLITE\include\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\MQXLITE\config\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\MQXLITE\psp\cortex_m\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\MQXLITE\psp\cortex_m\compiler\iar\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Generated_Code\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\PExSupport\Kinetis\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\OSAbstraction\MQXLite\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\RNG\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Common\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Utils\Lists\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Utils\FunctionLib\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Utils\SecLib\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\FSCI\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\FSCI\Source\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Panic\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\SerialManager\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\MemManager\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\TimersManager\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\TimersManager\Source\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Messaging\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\RNG\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\RNG\Source\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\ieee_802_15_4\Phy\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\ieee_802_15_4\SMAC\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\ADC\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\BME\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\Flash\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\I2C\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\LED\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\LLWU\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\LPTMR\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\SMC\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\MCG\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\Reset\
#        -On)
#    Locale            =  C
#    List file         =
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\kl16z128_eslora
#        MQXLite\List\LED2.lst
#    Object file       =
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\kl16z128_eslora
#        MQXLite\Obj\LED2.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\drv\Generated_Code\LED2.c
      1          /* ###################################################################
      2          **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
      3          **     Filename    : LED2.c
      4          **     Project     : ProcessorExpert
      5          **     Processor   : MKL26Z128VLL4
      6          **     Component   : BitIO_LDD
      7          **     Version     : Component 01.033, Driver 01.03, CPU db: 3.00.000
      8          **     Compiler    : IAR ARM C Compiler
      9          **     Date/Time   : 2014-03-28, 12:04, # CodeGen: 57
     10          **     Abstract    :
     11          **         The HAL BitIO component provides a low level API for unified
     12          **         access to general purpose digital input/output pins across
     13          **         various device designs.
     14          **
     15          **         RTOS drivers using HAL BitIO API are simpler and more
     16          **         portable to various microprocessors.
     17          **     Settings    :
     18          **          Component name                                 : LED2
     19          **          Pin for I/O                                    : PTE17
     20          **          Pin signal                                     :
     21          **          Direction                                      : Output
     22          **          Initialization                                 :
     23          **            Init. direction                              : Output
     24          **            Init. value                                  : 1
     25          **            Auto initialization                          : no
     26          **          Safe mode                                      : no
     27          **     Contents    :
     28          **         Init   - LDD_TDeviceData* LED2_Init(LDD_TUserData *UserDataPtr);
     29          **         Deinit - void LED2_Deinit(LDD_TDeviceData *DeviceDataPtr);
     30          **         ClrVal - void LED2_ClrVal(LDD_TDeviceData *DeviceDataPtr);
     31          **         SetVal - void LED2_SetVal(LDD_TDeviceData *DeviceDataPtr);
     32          **         NegVal - void LED2_NegVal(LDD_TDeviceData *DeviceDataPtr);
     33          **
     34          **     Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
     35          **     SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
     36          **
     37          **     http      : www.freescale.com
     38          **     mail      : support@freescale.com
     39          ** ###################################################################*/
     40          /*!
     41          ** @file LED2.c
     42          ** @version 01.03
     43          ** @brief
     44          **         The HAL BitIO component provides a low level API for unified
     45          **         access to general purpose digital input/output pins across
     46          **         various device designs.
     47          **
     48          **         RTOS drivers using HAL BitIO API are simpler and more
     49          **         portable to various microprocessors.
     50          */
     51          /*!
     52          **  @addtogroup LED2_module LED2 module documentation
     53          **  @{
     54          */
     55          
     56          /* MODULE LED2. */
     57          
     58          /* MQX Lite include files */
     59          #include "mqxlite.h"
     60          #include "mqxlite_prv.h"
     61          #include "LED2.h"
     62          
     63          #ifdef __cplusplus
     64          extern "C" {
     65          #endif
     66          
     67          typedef struct {
     68            LDD_TUserData *UserDataPtr;          /* Pointer to user data */
     69          } LED2_TDeviceData;                    /* Device data structure type */
     70          
     71          typedef LED2_TDeviceData *LED2_TDeviceDataPtr ; /* Pointer to the device data structure. */
     72          
     73          /* {MQXLite RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
     74          static LED2_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
     75          /*
     76          ** ===================================================================
     77          **     Method      :  LED2_Init (component BitIO_LDD)
     78          */
     79          /*!
     80          **     @brief
     81          **         Initializes the device. Allocates memory for the device data
     82          **         structure, allocates interrupt vectors and sets interrupt
     83          **         priority, sets pin routing, sets timing, etc. If the "Enable
     84          **         in init. code" is set to "yes" value then the device is also
     85          **         enabled(see the description of the Enable() method). In this
     86          **         case the Enable() method is not necessary and needn't to be
     87          **         generated.
     88          **     @param
     89          **         UserDataPtr     - Pointer to the user or
     90          **                           RTOS specific data. This pointer will be
     91          **                           passed as an event or callback parameter.
     92          **     @return
     93          **                         - Pointer to the dynamically allocated private
     94          **                           structure or NULL if there was an error.
     95          */
     96          /* ===================================================================*/
     97          LDD_TDeviceData* LED2_Init(LDD_TUserData *UserDataPtr)
     98          {
     99            /* Allocate device structure */
    100            LED2_TDeviceDataPtr DeviceDataPrv;
    101          
    102            /* {MQXLite RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
    103            DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    104            DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    105            /* Configure pin as output */
    106            /* GPIOE_PDDR: PDD|=0x20000 */
    107            GPIOE_PDDR |= GPIO_PDDR_PDD(0x20000);
    108            /* Set initialization value */
    109            /* GPIOE_PDOR: PDO|=0x20000 */
    110            GPIOE_PDOR |= GPIO_PDOR_PDO(0x20000);
    111            /* Initialization of Port Control register */
    112            /* PORTE_PCR17: ISF=0,MUX=1 */
    113            PORTE_PCR17 = (uint32_t)((PORTE_PCR17 & (uint32_t)~(uint32_t)(
    114                           PORT_PCR_ISF_MASK |
    115                           PORT_PCR_MUX(0x06)
    116                          )) | (uint32_t)(
    117                           PORT_PCR_MUX(0x01)
    118                          ));
    119            /* Registration of the device structure */
    120            PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_LED2_ID,DeviceDataPrv);
    121            return ((LDD_TDeviceData *)DeviceDataPrv);
    122          }
    123          /*
    124          ** ===================================================================
    125          **     Method      :  LED2_Deinit (component BitIO_LDD)
    126          */
    127          /*!
    128          **     @brief
    129          **          Deinitializes the device. Switches off the device, frees
    130          **         the device data structure memory, interrupts vectors, etc.
    131          **     @param
    132          **         DeviceDataPtr   - Device data structure
    133          **                           pointer returned by <Init> method.
    134          */
    135          /* ===================================================================*/
    136          void LED2_Deinit(LDD_TDeviceData *DeviceDataPtr)
    137          {
    138            (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
    139            /* GPIOE_PDDR: PDD&=~0x20000 */
    140            GPIOE_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x20000));
    141            /* Unregistration of the device structure */
    142            PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_LED2_ID);
    143            /* Deallocation of the device structure */
    144            /* {MQXLite RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    145          }
    146          
    147          /*
    148          ** ===================================================================
    149          **     Method      :  LED2_ClrVal (component BitIO_LDD)
    150          */
    151          /*!
    152          **     @brief
    153          **         Clears (set to zero) the output value. It is equivalent to
    154          **         the [PutVal(FALSE)]. This method is available only if the
    155          **         direction = _[output]_ or _[input/output]_.
    156          **     @param
    157          **         DeviceDataPtr   - Pointer to device data
    158          **                           structure returned by <Init> method.
    159          */
    160          /* ===================================================================*/
    161          void LED2_ClrVal(LDD_TDeviceData *DeviceDataPtr)
    162          {
    163            (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
    164            GPIO_PDD_ClearPortDataOutputMask(LED2_MODULE_BASE_ADDRESS, LED2_PORT_MASK);
    165          }
    166          
    167          /*
    168          ** ===================================================================
    169          **     Method      :  LED2_SetVal (component BitIO_LDD)
    170          */
    171          /*!
    172          **     @brief
    173          **         Sets (to one) the output value. It is equivalent to the
    174          **         [PutVal(TRUE)]. This method is available only if the
    175          **         direction = _[output]_ or _[input/output]_.
    176          **     @param
    177          **         DeviceDataPtr   - Pointer to device data
    178          **                           structure returned by <Init> method.
    179          */
    180          /* ===================================================================*/
    181          void LED2_SetVal(LDD_TDeviceData *DeviceDataPtr)
    182          {
    183            (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
    184            GPIO_PDD_SetPortDataOutputMask(LED2_MODULE_BASE_ADDRESS, LED2_PORT_MASK);
    185          }
    186          
    187          /*
    188          ** ===================================================================
    189          **     Method      :  LED2_NegVal (component BitIO_LDD)
    190          */
    191          /*!
    192          **     @brief
    193          **         Negates (inverts) the output value. It is equivalent to the
    194          **         [PutVal(!GetVal())]. This method is available only if the
    195          **         direction = _[output]_ or _[input/output]_.
    196          **     @param
    197          **         DeviceDataPtr   - Pointer to device data
    198          **                           structure returned by <Init> method.
    199          */
    200          /* ===================================================================*/
    201          void LED2_NegVal(LDD_TDeviceData *DeviceDataPtr)
    202          {
    203            (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
    204            GPIO_PDD_TogglePortDataOutputMask(LED2_MODULE_BASE_ADDRESS, LED2_PORT_MASK);
    205          }
    206          
    207          /* END LED2. */
    208          
    209          #ifdef __cplusplus
    210          }  /* extern "C" */
    211          #endif
    212          
    213          /*!
    214          ** @}
    215          */
    216          /*
    217          ** ###################################################################
    218          **
    219          **     This file was created by Processor Expert 10.3 [05.08]
    220          **     for the Freescale Kinetis series of microcontrollers.
    221          **
    222          ** ###################################################################
    223          */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   LED2_ClrVal
       0   LED2_Deinit
       4   LED2_Init
       0   LED2_NegVal
       0   LED2_SetVal


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  DeviceDataPrv__DEFAULT_RTOS_ALLOC
      10  LED2_ClrVal
      18  LED2_Deinit
      52  LED2_Init
      10  LED2_NegVal
      10  LED2_SetVal

 
   4 bytes in section .bss
 140 bytes in section .text
 
 140 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
