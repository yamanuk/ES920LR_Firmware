###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.1.245/W32 for ARM         14/May/2020  16:51:03
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\drv\Generated_Code\Vectors.c
#    Command line      =
#        -f C:\Users\81901\AppData\Local\Temp\EW6695.tmp
#        (C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\drv\Generated_Code\Vectors.c
#        --preprocess=s
#        "C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\kl16z128_eslora
#        MQXLite\List" -lcN
#        "C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\kl16z128_eslora
#        MQXLite\List" -o
#        "C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\kl16z128_eslora
#        MQXLite\Obj" --no_cse --no_unroll --no_inline --no_code_motion
#        --no_tbaa --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\Sources\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\MQXLITE\include\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\MQXLITE\config\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\MQXLITE\psp\cortex_m\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\MQXLITE\psp\cortex_m\compiler\iar\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Generated_Code\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\PExSupport\Kinetis\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\OSAbstraction\MQXLite\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\RNG\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Common\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Utils\Lists\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Utils\FunctionLib\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Utils\SecLib\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\FSCI\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\FSCI\Source\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Panic\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\SerialManager\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\MemManager\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\TimersManager\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\TimersManager\Source\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\Messaging\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\RNG\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\framework\RNG\Source\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\ieee_802_15_4\Phy\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\ieee_802_15_4\SMAC\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\ADC\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\BME\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\Flash\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\I2C\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\LED\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\LLWU\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\LPTMR\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\SMC\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\MCG\Interface\
#        -I
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\..\drv\Portable\Reset\
#        -On)
#    Locale            =  C
#    List file         =
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\kl16z128_eslora
#        MQXLite\List\Vectors.lst
#    Object file       =
#        C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\app\kl16z128_eslora
#        MQXLite\Obj\Vectors.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Users\81901\Desktop\job\es920lr\SDK\src\Application\KL16_SMAC_MQXLite\drv\Generated_Code\Vectors.c
      1          /** ###################################################################
      2          **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
      3          **     Filename    : Vectors.c
      4          **     Project     : ProcessorExpert
      5          **     Processor   : MKL26Z128VLL4
      6          **     Version     : Component 01.006, Driver 01.04, CPU db: 3.00.000
      7          **     Compiler    : IAR ARM C Compiler
      8          **     Date/Time   : 2014-10-10, 12:09, # CodeGen: 152
      9          **     Abstract    :
     10          **
     11          **     Settings    :
     12          **
     13          **
     14          **     Copyright : 1997 - 2013 Freescale Semiconductor, Inc. All Rights Reserved.
     15          **     SOURCE DISTRIBUTION PERMISSIBLE as directed in End User License Agreement.
     16          **
     17          **     http      : www.freescale.com
     18          **     mail      : support@freescale.com
     19          ** ###################################################################*/
     20          /*!
     21          ** @file Vectors.c
     22          ** @version 01.04
     23          ** @brief
     24          **
     25          */
     26          /*!
     27          **  @addtogroup Vectors_module Vectors module documentation
     28          **  @{
     29          */
     30          
     31            #include "Cpu.h"
     32            #include "MQXLite1.h"
     33            #include "SystemTimer1.h"
     34            #include "StackTimer.h"
     35            #include "UARTA.h"
     36            #include "UARTB.h"
     37            #include "SPISlave.h"
     38            #include "I2CDriver.h"
     39            #include "DataAvailablePin.h"
     40            #include "PitTimeStamp.h"
     41            #include "RealTimeClock.h"
     42            #include "LED1.h"
     43            #include "LED2.h"
     44            #include "Events.h"
     45            #include "mqx_tasks.h"
     46          
     47          
     48            /* ISR prototype */
     49            extern
     50            #ifdef __cplusplus
     51            "C"
     52            #endif
     53            void __iar_program_start( void );
     54          
     55          #if defined(__GNUC__)
     56          	extern unsigned long CSTACK[];
     57          #endif
     58          
     59            /* Referencing segment CSTACK in order to correctly initialize interrupt vector table. */
     60          #if defined(__IAR_SYSTEMS_ICC__)
     61            #pragma language=extended
     62            #pragma segment="CSTACK"
     63          
     64            /*lint -esym(765,__vector_table) Disable MISRA rule (8.10) checking for symbols (__vector_table). Definition of the interrupt vector table placed by linker on a predefined location. */
     65            /*lint -save  -e926 -e927 -e928 -e929 Disable MISRA rule (11.4) checking. Need to explicitly cast pointers to the general ISR for Interrupt vector table */
     66            /*lint -save  -e586 -e950 Disable MISRA rule (2.1,1.1) checking. Need to disable due to usage of @ operator in IAR compiler */
     67            const tVectorTable __vector_table @ ".intvec" = {
     68          #elif defined(__GNUC__)
     69              __attribute__((section(".IntVectTable"))) const tVectorTable __vector_table __attribute__((used)) = {
     70          #endif
     71              /* ISR name                             No. Address      Pri Name                          Description */
     72          #if defined(__IAR_SYSTEMS_ICC__)
     73              __sfe( "CSTACK" ),                 /* 0x00  0x00000000   -   ivINT_Initial_Stack_Pointer   used by PE */
     74          #elif defined(__GNUC__)
     75          	(pointer*)CSTACK,
     76          #endif
     77              {
     78          #if defined(__IAR_SYSTEMS_ICC__)
     79              (tIsrFunc)&__boot,                 /* 0x01  0x00000004   -   ivINT_Initial_Program_Counter used by PE */
     80              (tIsrFunc)&Cpu_Interrupt,          /* 0x02  0x00000008   -2   ivINT_NMI                     unused by PE */
     81              (tIsrFunc)&Cpu_Interrupt,          /* 0x03  0x0000000C   -1   ivINT_Hard_Fault              unused by PE */
     82              (tIsrFunc)&Cpu_Interrupt,          /* 0x04  0x00000010   -   ivINT_Reserved4               unused by PE */
     83              (tIsrFunc)&Cpu_Interrupt,          /* 0x05  0x00000014   -   ivINT_Reserved5               unused by PE */
     84              (tIsrFunc)&Cpu_Interrupt,          /* 0x06  0x00000018   -   ivINT_Reserved6               unused by PE */
     85              (tIsrFunc)&Cpu_Interrupt,          /* 0x07  0x0000001C   -   ivINT_Reserved7               unused by PE */
     86              (tIsrFunc)&Cpu_Interrupt,          /* 0x08  0x00000020   -   ivINT_Reserved8               unused by PE */
     87              (tIsrFunc)&Cpu_Interrupt,          /* 0x09  0x00000024   -   ivINT_Reserved9               unused by PE */
     88              (tIsrFunc)&Cpu_Interrupt,          /* 0x0A  0x00000028   -   ivINT_Reserved10              unused by PE */
     89              (tIsrFunc)&Cpu_Interrupt,          /* 0x0B  0x0000002C   -   ivINT_SVCall                  unused by PE */
     90              (tIsrFunc)&Cpu_Interrupt,          /* 0x0C  0x00000030   -   ivINT_Reserved12              unused by PE */
     91              (tIsrFunc)&Cpu_Interrupt,          /* 0x0D  0x00000034   -   ivINT_Reserved13              unused by PE */
     92              (tIsrFunc)&Cpu_Interrupt,          /* 0x0E  0x00000038   -   ivINT_PendableSrvReq          unused by PE */
     93              (tIsrFunc)&_int_kernel_isr,        /* 0x0F  0x0000003C   2   ivINT_SysTick                 used by PE */
     94              (tIsrFunc)&_int_kernel_isr,        /* 0x10  0x00000040   -   ivINT_DMA0                    used by PE */
     95              (tIsrFunc)&_int_kernel_isr,        /* 0x11  0x00000044   -   ivINT_DMA1                    used by PE */
     96              (tIsrFunc)&_int_kernel_isr,        /* 0x12  0x00000048   -   ivINT_DMA2                    used by PE */
     97              (tIsrFunc)&_int_kernel_isr,        /* 0x13  0x0000004C   -   ivINT_DMA3                    used by PE */
     98              (tIsrFunc)&_int_kernel_isr,        /* 0x14  0x00000050   -   ivINT_Reserved20              used by PE */
     99              (tIsrFunc)&_int_kernel_isr,        /* 0x15  0x00000054   -   ivINT_FTFA                    used by PE */
    100              (tIsrFunc)&_int_kernel_isr,        /* 0x16  0x00000058   -   ivINT_LVD_LVW                 used by PE */
    101              (tIsrFunc)&_int_kernel_isr,        /* 0x17  0x0000005C   -   ivINT_LLW                     used by PE */
    102              (tIsrFunc)&_int_kernel_isr,        /* 0x18  0x00000060   2   ivINT_I2C0                    used by PE */
    103              (tIsrFunc)&_int_kernel_isr,        /* 0x19  0x00000064   -   ivINT_I2C1                    used by PE */
    104              (tIsrFunc)&_int_kernel_isr,        /* 0x1A  0x00000068   2   ivINT_SPI0                    used by PE */
    105              (tIsrFunc)&_int_kernel_isr,        /* 0x1B  0x0000006C   -   ivINT_SPI1                    used by PE */
    106              (tIsrFunc)&_int_kernel_isr,        /* 0x1C  0x00000070   2   ivINT_UART0                   used by PE */
    107              (tIsrFunc)&_int_kernel_isr,        /* 0x1D  0x00000074   2   ivINT_UART1                   used by PE */
    108              (tIsrFunc)&_int_kernel_isr,        /* 0x1E  0x00000078   -   ivINT_UART2                   used by PE */
    109              (tIsrFunc)&_int_kernel_isr,        /* 0x1F  0x0000007C   -   ivINT_ADC0                    used by PE */
    110              (tIsrFunc)&_int_kernel_isr,        /* 0x20  0x00000080   -   ivINT_CMP0                    used by PE */
    111              (tIsrFunc)&_int_kernel_isr,        /* 0x21  0x00000084   -   ivINT_TPM0                    used by PE */
    112              (tIsrFunc)&_int_kernel_isr,        /* 0x22  0x00000088   -   ivINT_TPM1                    used by PE */
    113              (tIsrFunc)&_int_kernel_isr,        /* 0x23  0x0000008C   2   ivINT_TPM2                    used by PE */
    114              (tIsrFunc)&_int_kernel_isr,        /* 0x24  0x00000090   2   ivINT_RTC                     used by PE */
    115              (tIsrFunc)&_int_kernel_isr,        /* 0x25  0x00000094   2   ivINT_RTC_Seconds             used by PE */
    116              (tIsrFunc)&_int_kernel_isr,        /* 0x26  0x00000098   2   ivINT_PIT                     used by PE */
    117              (tIsrFunc)&_int_kernel_isr,        /* 0x27  0x0000009C   -   ivINT_I2S0                    used by PE */
    118              (tIsrFunc)&_int_kernel_isr,        /* 0x28  0x000000A0   -   ivINT_USB0                    used by PE */
    119              (tIsrFunc)&_int_kernel_isr,        /* 0x29  0x000000A4   -   ivINT_DAC0                    used by PE */
    120              (tIsrFunc)&_int_kernel_isr,        /* 0x2A  0x000000A8   -   ivINT_TSI0                    used by PE */
    121              (tIsrFunc)&_int_kernel_isr,        /* 0x2B  0x000000AC   -   ivINT_MCG                     used by PE */
    122              (tIsrFunc)&_int_kernel_isr,        /* 0x2C  0x000000B0   -   ivINT_LPTimer                 used by PE */
    123              (tIsrFunc)&_int_kernel_isr,        /* 0x2D  0x000000B4   -   ivINT_Reserved45              used by PE */
    124              (tIsrFunc)&_int_kernel_isr,        /* 0x2E  0x000000B8   -   ivINT_PORTA                   used by PE */
    125              (tIsrFunc)&_int_kernel_isr         /* 0x2F  0x000000BC   2   ivINT_PORTC_PORTD             used by PE */
    126          #elif defined(__GNUC__)
    127              (tIsrFunc)&__boot + 1,             /* 0x01  0x00000004   -   ivINT_Initial_Program_Counter used by PE */
    128              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x02  0x00000008   -2   ivINT_NMI                     unused by PE */
    129              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x03  0x0000000C   -1   ivINT_Hard_Fault              unused by PE */
    130              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x04  0x00000010   -   ivINT_Reserved4               unused by PE */
    131              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x05  0x00000014   -   ivINT_Reserved5               unused by PE */
    132              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x06  0x00000018   -   ivINT_Reserved6               unused by PE */
    133              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x07  0x0000001C   -   ivINT_Reserved7               unused by PE */
    134              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x08  0x00000020   -   ivINT_Reserved8               unused by PE */
    135              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x09  0x00000024   -   ivINT_Reserved9               unused by PE */
    136              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x0A  0x00000028   -   ivINT_Reserved10              unused by PE */
    137              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x0B  0x0000002C   -   ivINT_SVCall                  unused by PE */
    138              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x0C  0x00000030   -   ivINT_Reserved12              unused by PE */
    139              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x0D  0x00000034   -   ivINT_Reserved13              unused by PE */
    140              (tIsrFunc)&Cpu_Interrupt + 1,      /* 0x0E  0x00000038   -   ivINT_PendableSrvReq          unused by PE */
    141              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x0F  0x0000003C   2   ivINT_SysTick                 used by PE */
    142              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x10  0x00000040   -   ivINT_DMA0                    used by PE */
    143              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x11  0x00000044   -   ivINT_DMA1                    used by PE */
    144              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x12  0x00000048   -   ivINT_DMA2                    used by PE */
    145              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x13  0x0000004C   -   ivINT_DMA3                    used by PE */
    146              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x14  0x00000050   -   ivINT_Reserved20              used by PE */
    147              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x15  0x00000054   -   ivINT_FTFA                    used by PE */
    148              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x16  0x00000058   -   ivINT_LVD_LVW                 used by PE */
    149              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x17  0x0000005C   -   ivINT_LLW                     used by PE */
    150              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x18  0x00000060   2   ivINT_I2C0                    used by PE */
    151              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x19  0x00000064   -   ivINT_I2C1                    used by PE */
    152              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x1A  0x00000068   2   ivINT_SPI0                    used by PE */
    153              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x1B  0x0000006C   -   ivINT_SPI1                    used by PE */
    154              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x1C  0x00000070   2   ivINT_UART0                   used by PE */
    155              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x1D  0x00000074   2   ivINT_UART1                   used by PE */
    156              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x1E  0x00000078   -   ivINT_UART2                   used by PE */
    157              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x1F  0x0000007C   -   ivINT_ADC0                    used by PE */
    158              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x20  0x00000080   -   ivINT_CMP0                    used by PE */
    159              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x21  0x00000084   -   ivINT_TPM0                    used by PE */
    160              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x22  0x00000088   -   ivINT_TPM1                    used by PE */
    161              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x23  0x0000008C   2   ivINT_TPM2                    used by PE */
    162              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x24  0x00000090   2   ivINT_RTC                     used by PE */
    163              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x25  0x00000094   2   ivINT_RTC_Seconds             used by PE */
    164              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x26  0x00000098   2   ivINT_PIT                     used by PE */
    165              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x27  0x0000009C   -   ivINT_I2S0                    used by PE */
    166              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x28  0x000000A0   -   ivINT_USB0                    used by PE */
    167              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x29  0x000000A4   -   ivINT_DAC0                    used by PE */
    168              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x2A  0x000000A8   -   ivINT_TSI0                    used by PE */
    169              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x2B  0x000000AC   -   ivINT_MCG                     used by PE */
    170              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x2C  0x000000B0   -   ivINT_LPTimer                 used by PE */
    171              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x2D  0x000000B4   -   ivINT_Reserved45              used by PE */
    172              (tIsrFunc)&_int_kernel_isr + 1,    /* 0x2E  0x000000B8   -   ivINT_PORTA                   used by PE */
    173              (tIsrFunc)&_int_kernel_isr + 1     /* 0x2F  0x000000BC   2   ivINT_PORTC_PORTD             used by PE */
    174          #endif
    175              }
    176            };
    177            /*lint -restore Enable MISRA rule (2.1,1.1) checking. */
    178          
    179          
    180          /*!
    181          ** @}
    182          */
    183          /*
    184          ** ###################################################################
    185          **
    186          **     This file was created by Processor Expert 10.3 [05.09]
    187          **     for the Freescale Kinetis series of microcontrollers.
    188          **
    189          ** ###################################################################
    190          */


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     192  __vector_table

 
 192 bytes in section .intvec
 
 192 bytes of CONST memory

Errors: none
Warnings: none
